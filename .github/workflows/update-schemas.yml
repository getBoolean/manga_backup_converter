name: Update Schemas

on:
  workflow_dispatch: # Manual Trigger
  schedule:
    - cron: 0 6 * * 1 # Mondays 6AM UTC

permissions:
  contents: write # Request write permissions for the workflow

jobs:
  update-schemas:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Adjust the Python version as needed

      - name: Check if update_schemas branch exists
        id: check-branch-exists
        uses: GuillaumeFalourd/branch-exists@v1
        with:
          branch: update_schemas
      
      - name: Create Branch
        if: steps.check-branch-exists.outputs.exists == 'false'
        run: git switch -c update_schemas
      
      - name: Switch Branch
        if: steps.check-branch-exists.outputs.exists == 'true'
        run: |
          git fetch
          git pull origin main
          git checkout -b update_schemas

      # Ref: https://github.com/orgs/community/discussions/27071
      - name: Find PR Number
        uses: actions/github-script@v6
        id: get_pr_number
        if: steps.check-branch-exists.outputs.exists == 'true'
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              const comment = (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];

              if (comment != null) {
                return comment.number;
              }
              return null;
            }
          result-encoding: string

      - name: Get PR State
        uses: actions/github-script@v6
        id: get_pr_state
        if: steps.check-branch-exists.outputs.exists == 'true' && steps.get_pr_number.outputs.result != 'null'
        with:
          script: |
            return (
                await github.rest.issues.get({
                  issue_number: ${{ steps.get_pr_number.outputs.result }},
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data.state;
          result-encoding: string

      - name: Generate Schemas
        if: steps.get_pr_state.outputs.result != 'open'
        run: |
          mkdir packages/mangabackupconverter_cli/assets
          cd packages/mangabackupconverter_cli/assets
          curl -o 'requirements.txt' https://raw.githubusercontent.com/BrutuZ/tachibk-converter/main/requirements.txt
          pip install -r requirements.txt
          curl -o 'generate_schemas.py' https://raw.githubusercontent.com/BrutuZ/tachibk-converter/main/tachibk-converter.py
          python generate_schemas.py --dump-schemas

      - name: Commit and push changes
        if: steps.get_pr_state.outputs.result != 'open'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'Schema Assistant'
          git config --global user.email 'schema-assistant@users.noreply.github.com'
          git add **/*.proto

          # Check if there are any changes
          if git diff-index --cached --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m 'Update Protobuf schemas'
            git push --set-upstream origin update_schemas
          fi
      - name: Create pull request
        if: steps.get_pr_state.outputs.result != 'open'
        run: gh pr create -B main -H update_schemas --title 'Update Tachi Protobuf Schemas' --body 'Created by Github Actions'
        env:
            GITHUB_TOKEN: ${{ secrets.PAT }}
